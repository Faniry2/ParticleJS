class Particule{#plusorless=0;#xOrigin=0;#yOrigin=0;#density=0;constructor(t,i,s,h,e){this.options=Object.assign({},e),this.pixels=[],this.x=t,this.y=i,this.w=s,this.h=h,this.#plusorless=Math.round(Math.random())<.85?1:-1,this.#xOrigin=this.x,this.#yOrigin=this.y,this.#density=30*Math.random()+1}retrieveImageParticule(t,i){let s=0;for(let h=0;h<t.height;h++)for(let e=0;e<t.width;e++){let o=4*e,l=4*h*t.width+o;if(t.data[l+3]>128){let o=t.data[l],r=t.data[l+1],a=t.data[l+2],n=t.data[l+3],x=Object.assign({},{r:o,g:r,b:a,a:n},i);this.pixels[s]=new Particule(10*e,10*h,800,800,x),s++}}}update(){let t=0,i=0,s=0,h=0,e=0,o=0,l=0,r=0;if(isMouseMouve)if(t=mouse.x-this.x,i=mouse.y-this.y,s=Math.sqrt(t*t+i*i),h=t/s,e=i/s,o=(mouse.radius-s)/mouse.radius,l=h*o*this.#density,r=e*o*this.#density,s<mouse.radius)this.x-=l,this.y-=r;else{if(this.x!==this.#xOrigin){let t=this.x-this.#xOrigin;this.x-=t/2}if(this.y!==this.#yOrigin){let t=this.y-this.#yOrigin;this.y-=t/2}}else this.x-=(.5*Math.random()+5)*this.#plusorless/9,this.y-=(.5*Math.random()+2)*this.#plusorless/9;this.#collisionDetectForBTLR()}linkParticule(t){return null!=t?this.#makeLinkage(t):this.#makeLinkage(this.pixels),this}#makeLinkage(t){for(let i=0;i<t.length;i++)for(let s=0;s<t.length;s++){let h=t[i].x-t[s].x,e=t[i].y-t[s].y;Math.sqrt(h*h+e*e)<t[0].options.maxDistLinkage&&(ctx.strokeStyle=t[0].options.strokeColor,ctx.lineWidth=t[0].options.strokeLineWidth,ctx.beginPath(),ctx.moveTo(t[i].x,t[i].y),ctx.lineTo(t[s].x,t[s].y),ctx.stroke())}}#collisionDetectForBTLR(){this.x>=0&&this.x<=this.w&&this.y<=0&&(this.y+=this.y/2,this.#plusorless=-1),this.y>=0&&this.y<=this.h&&this.x<=0&&(this.x-=this.x*Math.random()/2,this.#plusorless=-1),this.y>=0&&this.y<=this.h&&this.x>=this.w&&(this.x-=6*Math.random()/2,this.#plusorless=1),this.x>=0&&this.x<=this.w&&this.y>=this.h&&(this.y-=6*Math.random()/2,this.#plusorless=1)}imageToParticule(){return ctx.fillStyle=this.options.particuleColor,ctx.beginPath(),ctx.arc(this.x,this.y,this.options.size,0,2*Math.PI),ctx.closePath(),ctx.fill(),this}}